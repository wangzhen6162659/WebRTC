[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
/ompf/coturn-server/signalmaster/sockets.js:130
            result.clients[id] = adapter.nsp.connected[id].resources;
                                                           ^

TypeError: Cannot read property 'resources' of undefined
    at /ompf/coturn-server/signalmaster/sockets.js:130:60
    at Array.forEach (<anonymous>)
    at describeRoom (/ompf/coturn-server/signalmaster/sockets.js:129:30)
    at Socket.join (/ompf/coturn-server/signalmaster/sockets.js:61:30)
    at Socket.emit (events.js:182:13)
    at /ompf/coturn-server/signalmaster/node_modules/socket.io/lib/socket.js:503:12
    at process._tickCallback (internal/process/next_tick.js:61:11)
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
44 sockets {} undefined
/ompf/coturn-server/signalmaster/sockets.js:132
            result.clients[id] = adapter.nsp.connected[id].resources;
                                                           ^

TypeError: Cannot read property 'resources' of undefined
    at /ompf/coturn-server/signalmaster/sockets.js:132:60
    at Array.forEach (<anonymous>)
    at describeRoom (/ompf/coturn-server/signalmaster/sockets.js:130:30)
    at Socket.join (/ompf/coturn-server/signalmaster/sockets.js:61:30)
    at Socket.emit (events.js:182:13)
    at /ompf/coturn-server/signalmaster/node_modules/socket.io/lib/socket.js:503:12
    at process._tickCallback (internal/process/next_tick.js:61:11)
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
https://wzroom.cn:8443
https://wzroom.cn:8443
{}
https://wzroom.cn:8443
https://wzroom.cn:8443
undefined
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
https://wzroom.cn:8443
{}
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
http://wzroom.cn:8433
https://wzroom.cn:8443
{}
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
{}
https://wzroom.cn:8443
Room { sockets: { 'U34-iVGL3aiMNbI9AAAL': true }, length: 1 }
https://wzroom.cn:8443
{}
https://wzroom.cn:8443
https://wzroom.cn:8443
{}
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
http://wzroom.cn:8433
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
{}
undefined
Room { sockets: { cRoNUjCSwMuMaaP2AAAo: true }, length: 1 }
undefined
{}
undefined
{}
undefined
undefined
undefined
{}
undefined
{}
undefined
undefined
{}
undefined
undefined
{}
https://wzroom.cn:8443
https://wzroom.cn:8443
{}
undefined
{}
undefined
Room { sockets: { '-hD5zmIEYd4UyoBwAAA2': true }, length: 1 }
undefined
{}
undefined
Room { sockets: { IqYGK7Pzk03cngdqAAA4: true }, length: 1 }
https://wzroom.cn:8443
Room { sockets: { 'RKqCX-8oTOlquzM4AAA5': true }, length: 1 }
https://wzroom.cn:8443
{}
https://wzroom.cn:8443
Room { sockets: { wdf1MS80wEwORd6RAAA7: true }, length: 1 }
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
http://wzroom.cn:8080
undefined
{}
http://wzroom.cn:8080
http://wzroom.cn:8080
Room { sockets: { DmL60XHr6XdRRrJOAAAA: true }, length: 1 }
http://wzroom.cn:8080
https://wzroom.cn:8443
http://wzroom.cn:8080
http://wzroom.cn:8080
{}
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
Room { sockets: { pvfwG08KEJKeBLNKAAAH: true }, length: 1 }
http://wzroom.cn:8080
Room {
  sockets: { pvfwG08KEJKeBLNKAAAH: true, yZOtDV8jRprXnrYnAAAM: true },
  length: 2 }
http://wzroom.cn:8080
Room {
  sockets: { pvfwG08KEJKeBLNKAAAH: true, m7ORfhaR_EiI9XhJAAAN: true },
  length: 2 }
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
{}
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
{}
http://wzroom.cn:8080
Room { sockets: { JQhT9Sy7FSmUK8L1AAAX: true }, length: 1 }
http://wzroom.cn:8080
Room { sockets: { JQhT9Sy7FSmUK8L1AAAX: true }, length: 1 }
http://wzroom.cn:8080
{}
http://wzroom.cn:8080
Room { sockets: { N4BDtYY7w6c1EGPrAAAa: true }, length: 1 }
http://wzroom.cn:8080
{}
http://wzroom.cn:8080
Room { sockets: { 'CMWh2-j5-1OfQum5AAAc': true }, length: 1 }
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
http://wzroom.cn:8080
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
{ 'OUqf-j8EB8ml9zPQAAAA':
   Socket {
     id: 'OUqf-j8EB8ml9zPQAAAA',
     server:
      Server {
        clients: [Circular],
        clientsCount: 1,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543815407961-2858',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 352,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 13,
        [Symbol(triggerId)]: 9 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'OUqf-j8EB8ml9zPQAAAA',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
http://wzroom.cn:8080
{ hOKpyvxtYUFSXb6mAAAB:
   Socket {
     id: 'hOKpyvxtYUFSXb6mAAAB',
     server:
      Server {
        clients: [Circular],
        clientsCount: 1,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543817545312-2861',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 2135420,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 545,
        [Symbol(triggerId)]: 543 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'hOKpyvxtYUFSXb6mAAAB',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
http://wzroom.cn:8080
{ 'c3tACWF-1_lBOm8NAAAC':
   Socket {
     id: 'c3tACWF-1_lBOm8NAAAC',
     server:
      Server {
        clients: [Circular],
        clientsCount: 1,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543819709162-0',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 4437833,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 625,
        [Symbol(triggerId)]: 623 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'c3tACWF-1_lBOm8NAAAC',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
http://127.0.0.1:8080
{ '3vvB4m07YvPtAB9QAAAD':
   Socket {
     id: '3vvB4m07YvPtAB9QAAAD',
     server:
      Server {
        clients: [Circular],
        clientsCount: 1,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543819714410-0',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 4443065,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 698,
        [Symbol(triggerId)]: 623 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: '3vvB4m07YvPtAB9QAAAD',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
http://127.0.0.1:8080
{ '3vvB4m07YvPtAB9QAAAD':
   Socket {
     id: '3vvB4m07YvPtAB9QAAAD',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543819714410-0',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 5069716,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 882,
        [Symbol(triggerId)]: 739 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  kW6mUn78iLPOo8ZnAAAE:
   Socket {
     id: 'kW6mUn78iLPOo8ZnAAAE',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 5081538,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 890,
        [Symbol(triggerId)]: 888 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'kW6mUn78iLPOo8ZnAAAE',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
undefined
{ '3vvB4m07YvPtAB9QAAAD':
   Socket {
     id: '3vvB4m07YvPtAB9QAAAD',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543819714410-0',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 5345485,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 1025,
        [Symbol(triggerId)]: 739 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  HQua1CTMilkOXluLAAAF:
   Socket {
     id: 'HQua1CTMilkOXluLAAAF',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 5345950,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 1033,
        [Symbol(triggerId)]: 1031 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'HQua1CTMilkOXluLAAAF',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
undefined
{ '3vvB4m07YvPtAB9QAAAD':
   Socket {
     id: '3vvB4m07YvPtAB9QAAAD',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543819714410-0',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 7802804,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 1602,
        [Symbol(triggerId)]: 739 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  BTAsAPX_lnVXjJM5AAAG:
   Socket {
     id: 'BTAsAPX_lnVXjJM5AAAG',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 7820147,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 1610,
        [Symbol(triggerId)]: 1608 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'BTAsAPX_lnVXjJM5AAAG',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
undefined
{ '3vvB4m07YvPtAB9QAAAD':
   Socket {
     id: '3vvB4m07YvPtAB9QAAAD',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=1543819714410-0',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 8003287,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 1717,
        [Symbol(triggerId)]: 739 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  J3EcvxRGJp5DaxHgAAAH:
   Socket {
     id: 'J3EcvxRGJp5DaxHgAAAH',
     server:
      Server {
        clients: [Circular],
        clientsCount: 2,
        wsEngine: undefined,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: true,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: false,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::ffff:58.16.181.23',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 8017989,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 1729,
        [Symbol(triggerId)]: 1727 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'J3EcvxRGJp5DaxHgAAAH',
        req: null,
        res: null,
        writable: false },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 } }
undefined
<Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 41 49 42 41 41 4b 43 41 51 45 41 74 49 ... >
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: https://192.168.1.124:8888
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
https://192.168.1.124:8443
https://192.168.1.124:8443
https://192.168.1.124:8443
https://wzroom.cn:8443
https://192.168.1.124:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
[1m[35m&[39m[22m[1m[34myet[39m[22m -- signal master is running at: http://192.168.1.124:8888
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
https://wzroom.cn:8443
